version: "3.9"

services:
    kong-database:
        image: postgres:13
        container_name: kong-database
        environment:
            POSTGRES_USER: kong
            POSTGRES_DB: kong
            POSTGRES_PASSWORD: kongpass
        networks:
            - kong-net
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "kong"]
            interval: 5s
            timeout: 5s
            retries: 5

    kong-migrations:
        image: kong/kong-gateway:3.9.0.0
        command: kong migrations bootstrap
        environment:
            KONG_DATABASE: postgres
            KONG_PG_HOST: kong-database
            KONG_PG_USER: kong
            KONG_PG_PASSWORD: kongpass
        depends_on:
            - kong-database
        networks:
            - kong-net

    kong-gateway:
        image: kong/kong-gateway:3.9.0.0
        container_name: kong-gateway
        environment:
            KONG_DATABASE: postgres
            KONG_PG_HOST: kong-database
            KONG_PG_USER: kong
            KONG_PG_PASSWORD: kongpass
            KONG_PROXY_ACCESS_LOG: /dev/stdout
            KONG_ADMIN_ACCESS_LOG: /dev/stdout
            KONG_PROXY_ERROR_LOG: /dev/stderr
            KONG_ADMIN_ERROR_LOG: /dev/stderr
            KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
            KONG_SSL_CERT: /etc/kong/ssl/kong-crt.pem
            KONG_SSL_CERT_KEY: /etc/kong/ssl/kong-key.pem
            KONG_ADMIN_SSL_CERT: /etc/kong/ssl/kong-crt.pem
            KONG_ADMIN_SSL_CERT_KEY: /etc/kong/ssl/kong-key.pem
        ports:
            - 8000:8000 # Proxy HTTP
            - 8443:8443 # Proxy HTTPS
            - 8001:8001 # Admin API HTTP
            - 8444:8444 # Admin API HTTPS
        depends_on:
            - kong-migrations
        networks:
            - kong-net
        volumes:
            - ./ssl:/etc/kong/ssl

networks:
    kong-net:
        driver: bridge

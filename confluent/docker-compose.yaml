services:
    zookeeper:
        image: confluentinc/cp-zookeeper:6.2.0
        hostname: zookeeper
        container_name: zookeeper
        restart: always
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        volumes:
            - zookeeper_data:/var/lib/zookeeper
        networks:
            - thesis-network

    broker:
        image: confluentinc/cp-server:6.2.0
        hostname: broker
        container_name: broker
        restart: always
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "9101:9101"
            - "9093:9093"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,EXTERNAL:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://192.168.224.8:9092,EXTERNAL://34.124.235.0:9093
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 9101
            KAFKA_JMX_HOSTNAME: localhost
            KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8092
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            CONFLUENT_METRICS_ENABLE: "true"
            CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
        volumes:
            - broker_data:/var/lib/kafka
        networks:
            - thesis-network

    schema-registry:
        image: confluentinc/cp-schema-registry:6.2.0
        hostname: schema-registry
        container_name: schema-registry
        restart: always
        depends_on:
            - broker
        ports:
            - "8092:8092"
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://broker:29092"
            SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8092
        volumes:
            - schema_registry_data:/var/lib/schema-registry
        networks:
            - thesis-network

    kafka-connect:
        image: confluentinc/cp-kafka-connect:6.2.0
        hostname: kafka-connect
        container_name: kafka-connect
        restart: always
        ports:
            - "8083:8083"
        cap_add:
            - NET_ADMIN
            - NET_RAW
        environment:
            CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
            CONNECT_REST_PORT: 8083
            CONNECT_GROUP_ID: compose-connect-group
            CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
            CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
            CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
            CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
            CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8092
            CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8092
            CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
            CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
            CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
            CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
            CONNECT_LOG4J_LOGGERS: "io.confluent.connect=DEBUG,org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_PLUGIN_PATH: "/usr/share/java,/etc/kafka-connect/jars,/usr/share/confluent-hub-components"
        depends_on:
            - zookeeper
            - broker
            - schema-registry
            - rest-proxy
        command:
            - bash
            - -c
            - |
                confluent-hub install debezium/debezium-connector-mysql:latest
                confluent-hub install  confluentinc/kafka-connect-datagen:0.4.0
                confluent-hub install --no-prompt  /usr/share/plugin/confluentinc-connect-transforms-1.5.0.zip
                confluent-hub install --no-prompt /usr/share/plugin/debezium-debezium-connector-postgresql-2.5.4.zip
                /etc/confluent/docker/run
        volumes:
            - ./connectors:/etc/kafka-connect/jars/
            - ./confluentinc-plugin:/usr/share/plugin
            - kafka_connect_data:/var/lib/kafka-connect
        networks:
            - thesis-network

    control-center:
        image: confluentinc/cp-enterprise-control-center:6.2.0
        hostname: control-center
        container_name: control-center
        restart: always
        depends_on:
            - broker
            - schema-registry
            - kafka-connect
            - ksqldb-server
        ports:
            - "9021:9021"
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:29092"
            CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: "kafka-connect:8083"
            CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
            CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://ksqldb-server:8088"
            CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8092"
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONFLUENT_METRICS_TOPIC_REPLICATION: 1
            PORT: 9021
        volumes:
            - control_center_data:/var/lib/control-center
        networks:
            - thesis-network

    ksqldb-server:
        image: confluentinc/cp-ksqldb-server:6.2.0
        hostname: ksqldb-server
        container_name: ksqldb-server
        restart: always
        depends_on:
            - broker
            - kafka-connect
        ports:
            - "8088:8088"
        environment:
            KSQL_CONFIG_DIR: "/etc/ksql"
            KSQL_BOOTSTRAP_SERVERS: "broker:29092"
            KSQL_HOST_NAME: ksqldb-server
            KSQL_LISTENERS: "http://0.0.0.0:8088"
            KSQL_CACHE_MAX_BYTES_BUFFERING: 0
            KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8092"
            KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
            KSQL_KSQL_CONNECT_URL: "http://kafka-connect:8083"
            KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
            KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
            KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
        networks:
            - thesis-network

    ksqldb-cli:
        image: confluentinc/cp-ksqldb-cli:6.2.0
        container_name: ksqldb-cli
        restart: always
        depends_on:
            - broker
            # - connect
            - kafka-connect
            - ksqldb-server
        entrypoint: /bin/sh
        tty: true
        networks:
            - thesis-network

    rest-proxy:
        image: confluentinc/cp-kafka-rest:6.2.0
        restart: always
        depends_on:
            - broker
            - schema-registry
        ports:
            - 8082:8082
        hostname: rest-proxy
        container_name: rest-proxy
        environment:
            KAFKA_REST_HOST_NAME: rest-proxy
            KAFKA_REST_BOOTSTRAP_SERVERS: "broker:29092"
            KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
            KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8092"
        networks:
            - thesis-network
volumes:
    zookeeper_data:
    broker_data:
    schema_registry_data:
    kafka_connect_data:
    control_center_data:
    ksqldb_data:
networks:
    thesis-network:
        external: true
